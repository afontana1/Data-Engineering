name: myapi

services:
  microservice1:
    build:
      context: ./microservice1
      dockerfile: Dockerfile.dev
    depends_on:
      - postgres_db
      - broker
      - debezium_connect
      - pgadmin
      - kafka-ui
    ports:
      - "8000:8000"
    volumes:
      - ./microservice1:/code
  
  microservice2:
    build:
      context: ./microservice2
      dockerfile: Dockerfile.dev
    depends_on:
      - broker
      - debezium_connect
      - postgres_db
    ports:
      - "8001:8000"
    volumes:
      - ./microservice2:/code
      
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@broker:29093"
      KAFKA_LISTENERS: "CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092"
      KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      CLUSTER_ID: "4L6g3nShT-eMCtK--X86sw"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "Local Kafka Cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "broker:19092"
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker

  postgres_db:
    image: debezium/postgres:16-alpine
    restart: always
    container_name: PostgresCont
    environment:
      - POSTGRES_USER=ziakhan
      - POSTGRES_PASSWORD=my_password
      - POSTGRES_DB=mydatabase
      - PGPASSWORD=postgrespw
    ports:
      - "5433:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    command: >
      postgres -c wal_level=logical
               -c max_replication_slots=10
               -c max_wal_senders=10

  debezium_connect:
    image: debezium/connect
    container_name: debezium_connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=broker:19092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my-connect-configs
      - OFFSET_STORAGE_TOPIC=my-connect-offsets
      - ADVERTISED_HOST_NAME=debezium_connect
      - CONNECT_PRODUCER_SECURITY_PROTOCOL=PLAINTEXT
      - CONNECT_CONSUMER_SECURITY_PROTOCOL=PLAINTEXT
      - CONNECT_SECURITY_PROTOCOL=PLAINTEXT
      - CONNECT_REST_ADVERTISED_HOST_NAME=debezium_connect
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_PORT=8083
    depends_on:
      - broker
      - postgres_db

  pgadmin:
    image: dpage/pgadmin4:8.6
    restart: always
    container_name: PgAdmin4Cont
    ports:
      - "8010:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres_db

volumes:
  postgres_db:
    driver: local
  pgadmin:
    driver: local


networks:
  default:
    driver: bridge
